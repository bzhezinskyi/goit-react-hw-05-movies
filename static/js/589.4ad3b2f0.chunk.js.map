{"version":3,"file":"static/js/589.4ad3b2f0.chunk.js","mappings":"iQAEaA,E,OAAQC,GAAAA,IAAH,yC,SCGH,SAASC,IACtB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAkCE,EAAAA,EAAAA,UAAS,MAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KAYA,IAVAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,+FACZC,EAAAA,EAAAA,IAAY,CAChBP,QAASA,EACTQ,OAAQ,aACPC,KAAKL,GAJU,2CAAH,qDAMjBE,GACD,GAAE,CAACN,IAECG,EAGL,OACE,yBAC6B,IAA1BA,EAAUO,KAAKC,QACd,mEAEA,wBACGR,EAAUO,KAAKE,KAAI,gBAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,UAAWC,EAApB,EAAoBA,GAAIC,EAAxB,EAAwBA,aAAxB,OAClB,0BACGA,IACC,SAACnB,EAAD,CACEoB,IAAG,6CAAwCD,GAC3CE,IAAKL,KAGT,uBAAIA,KACJ,uBAAIC,MARGC,EADS,OAgB7B,C,+IC1CKI,EAAS,mCACTC,EAAgBC,EAAAA,EAAAA,OAAa,CACjCC,QAAS,iCAGEC,EAAW,mCAAG,sGACFH,EAAcI,IAAI,sBAAuB,CAC9DC,OAAQ,CAAEC,QAASP,KAFI,uBACjBQ,EADiB,EACjBA,KADiB,kBAIlBA,GAJkB,2CAAH,qDAOXC,EAAe,mCAAG,sGAASC,MAAAA,OAAT,MAAiB,GAAjB,WACNT,EAAcI,IAAI,gBAAiB,CACxDC,OAAQ,CAAEC,QAASP,EAAQU,MAAAA,KAFA,uBACrBF,EADqB,EACrBA,KADqB,kBAItBA,GAJsB,2CAAH,sDAOfpB,EAAW,mCAAG,oGAASP,EAAT,EAASA,QAAT,IAAkBQ,OAAAA,OAAlB,MAA2B,GAA3B,WAEFY,EAAcI,IAAd,iBAA4BxB,GAA5B,OAAsCQ,GAAU,CACrEiB,OAAQ,CAAEC,QAASP,KAHI,uBAEjBQ,EAFiB,EAEjBA,KAFiB,kBAKlBA,GALkB,2CAAH,qD","sources":["pages/Movies/Cast/Cast.styled.jsx","pages/Movies/Cast/Cast.jsx","services/themoviedb.services.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Photo = styled.img`\n  width: 100px;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMoviesId } from 'services/themoviedb.services';\nimport { Photo } from './Cast.styled';\n\nexport default function Cast() {\n  const { movieId } = useParams();\n  const [movieCast, setMovieCast] = useState(null);\n\n  useEffect(() => {\n    const createMovie = async () => {\n      await getMoviesId({\n        movieId: movieId,\n        detail: '/credits',\n      }).then(setMovieCast);\n    };\n    createMovie();\n  }, [movieId]);\n\n  if (!movieCast) {\n    return;\n  }\n  return (\n    <div>\n      {movieCast.cast.length === 0 ? (\n        <h3>We don't have any cast for this movie</h3>\n      ) : (\n        <ul>\n          {movieCast.cast.map(({ name, character, id, profile_path }) => (\n            <li key={id}>\n              {profile_path && (\n                <Photo\n                  src={`https://image.tmdb.org/t/p/original${profile_path}`}\n                  alt={name}\n                />\n              )}\n              <p>{name}</p>\n              <p>{character}</p>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n}\n","import axios from 'axios';\n\nconst keyApi = '9e8b55203cd36bc26921f9fe565ad09d';\nconst themoviedbApi = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n});\n\nexport const getTrending = async () => {\n  const { data } = await themoviedbApi.get('/trending/movie/day', {\n    params: { api_key: keyApi },\n  });\n  return data;\n};\n\nexport const getSearchMovies = async ({ query = '' }) => {\n  const { data } = await themoviedbApi.get('/search/movie', {\n    params: { api_key: keyApi, query },\n  });\n  return data;\n};\n\nexport const getMoviesId = async ({ movieId, detail = '' }) => {\n  // '/credits' '/reviews`\n  const { data } = await themoviedbApi.get(`/movie/${movieId}${detail}`, {\n    params: { api_key: keyApi },\n  });\n  return data;\n};\n"],"names":["Photo","styled","Cast","movieId","useParams","useState","movieCast","setMovieCast","useEffect","createMovie","getMoviesId","detail","then","cast","length","map","name","character","id","profile_path","src","alt","keyApi","themoviedbApi","axios","baseURL","getTrending","get","params","api_key","data","getSearchMovies","query"],"sourceRoot":""}