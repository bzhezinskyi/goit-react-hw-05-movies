{"version":3,"file":"static/js/696.27b3ee70.chunk.js","mappings":"4PAEe,SAASA,EAAT,GAA2D,IAA/BC,EAA8B,EAA9BA,aAAcC,EAAgB,EAAhBA,aACvD,GAAsCC,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,MAEAC,EAAAA,EAAAA,YAAU,WACRD,EAAeH,EAChB,GAAE,CAACA,IAaJ,OACE,kBAAMK,SARiB,SAAAC,GACvBA,EAAMC,iBACc,KAAhBL,GACFH,EAAaG,EAEhB,EAGC,WACE,kBAAOM,KAAK,OAAOC,MAAOP,EAAaQ,SAblB,SAAAJ,GACvBH,EAAeG,EAAMK,OAAOF,MAC7B,KAYG,mBAAQG,SAA0B,KAAhBV,EAAlB,sBAGL,C,kCCpBc,SAASW,IAAU,IAAD,EAC/B,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOd,EAAP,KAAqBe,EAArB,KACA,GAAoCd,EAAAA,EAAAA,UAAS,IAA7C,eAAOe,EAAP,KAAmBC,EAAnB,KACMC,GAAWC,EAAAA,EAAAA,OAEjBf,EAAAA,EAAAA,YAAU,WACR,GAAKJ,EAAaoB,IAAI,SAAtB,CAGA,IAAMC,EAAiB,mCAAG,qGACLC,EAAAA,EAAAA,IAAgB,CACjCC,MAAOvB,EAAaoB,IAAI,WACvBI,OAHqB,cAClBC,EADkB,yBAIjBR,EAAcQ,EAAKC,UAJF,2CAAH,qDAMvBL,GAPC,CAQF,GAAE,CAACrB,IAMJ,OACE,iCACE,SAAC,IAAD,WACE,SAACF,EAAD,CACEC,aARmB,SAAA4B,GACzBZ,EAAgB,CAAEQ,MAAOI,GAC1B,EAOO3B,aAAY,UAAEA,EAAaoB,IAAI,gBAAnB,QAA+B,OAI/B,KAAfJ,IACC,wBACGA,EAAWY,KAAI,YAAoB,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GACxB,OACE,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,GAAME,MAAO,CAAEC,KAAMf,GAA1C,SACGW,KAFIC,EAMZ,QAMV,C,mJCnDKI,EAAS,mCACTC,EAAgBC,EAAAA,EAAAA,OAAa,CACjCC,QAAS,iCAGEC,EAAW,mCAAG,sGACFH,EAAcf,IAAI,sBAAuB,CAC9DmB,OAAQ,CAAEC,QAASN,KAFI,uBACjBT,EADiB,EACjBA,KADiB,kBAIlBA,GAJkB,2CAAH,qDAOXH,EAAe,mCAAG,sGAASC,MAAAA,OAAT,MAAiB,GAAjB,WACNY,EAAcf,IAAI,gBAAiB,CACxDmB,OAAQ,CAAEC,QAASN,EAAQX,MAAAA,KAFA,uBACrBE,EADqB,EACrBA,KADqB,kBAItBA,GAJsB,2CAAH,sDAOfgB,EAAW,mCAAG,oGAASC,EAAT,EAASA,QAAT,IAAkBC,OAAAA,OAAlB,MAA2B,GAA3B,WAEFR,EAAcf,IAAd,iBAA4BsB,GAA5B,OAAsCC,GAAU,CACrEJ,OAAQ,CAAEC,QAASN,KAHI,uBAEjBT,EAFiB,EAEjBA,KAFiB,kBAKlBA,GALkB,2CAAH,qD","sources":["pages/Movies/MoviesSearchForm/MoviesSearchForm.jsx","pages/Movies/Movies.jsx","services/themoviedb.services.js"],"sourcesContent":["import { useState, useEffect } from 'react';\n\nexport default function MoviesSearchForm({ onSubmitForm, searchParams }) {\n  const [searchValue, setSearchValue] = useState('');\n\n  useEffect(() => {\n    setSearchValue(searchParams);\n  }, [searchParams]);\n\n  const handleChangeForm = event => {\n    setSearchValue(event.target.value);\n  };\n\n  const handleSubmitForm = event => {\n    event.preventDefault();\n    if (searchValue !== '') {\n      onSubmitForm(searchValue);\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmitForm}>\n      <input type=\"text\" value={searchValue} onChange={handleChangeForm} />\n      <button disabled={searchValue === ''}>Search</button>\n    </form>\n  );\n}\n","import { Box } from 'components/Box.styled';\nimport MoviesSearchForm from 'pages/Movies/MoviesSearchForm/MoviesSearchForm';\nimport { useState, useEffect } from 'react';\nimport { Link, useSearchParams, useLocation } from 'react-router-dom';\nimport { getSearchMovies } from 'services/themoviedb.services';\n\nexport default function Movies() {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [moviesList, setMoviesList] = useState('');\n  const location = useLocation();\n\n  useEffect(() => {\n    if (!searchParams.get('query')) {\n      return;\n    }\n    const requestMoviesList = async () => {\n      const data = await getSearchMovies({\n        query: searchParams.get('query'),\n      }).then();\n      return setMoviesList(data.results);\n    };\n    requestMoviesList();\n  }, [searchParams]);\n\n  const createSearchParams = movies => {\n    setSearchParams({ query: movies });\n  };\n\n  return (\n    <>\n      <Box>\n        <MoviesSearchForm\n          onSubmitForm={createSearchParams}\n          searchParams={searchParams.get('query') ?? ''}\n        />\n      </Box>\n\n      {moviesList !== '' && (\n        <ul>\n          {moviesList.map(({ title, id }) => {\n            return (\n              <li key={id}>\n                <Link to={`/movies/${id}`} state={{ from: location }}>\n                  {title}\n                </Link>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n      {/* {movies.length === 0 && <h2>not a valid search value</h2>} */}\n    </>\n  );\n}\n","import axios from 'axios';\n\nconst keyApi = '9e8b55203cd36bc26921f9fe565ad09d';\nconst themoviedbApi = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n});\n\nexport const getTrending = async () => {\n  const { data } = await themoviedbApi.get('/trending/movie/day', {\n    params: { api_key: keyApi },\n  });\n  return data;\n};\n\nexport const getSearchMovies = async ({ query = '' }) => {\n  const { data } = await themoviedbApi.get('/search/movie', {\n    params: { api_key: keyApi, query },\n  });\n  return data;\n};\n\nexport const getMoviesId = async ({ movieId, detail = '' }) => {\n  // '/credits' '/reviews`\n  const { data } = await themoviedbApi.get(`/movie/${movieId}${detail}`, {\n    params: { api_key: keyApi },\n  });\n  return data;\n};\n"],"names":["MoviesSearchForm","onSubmitForm","searchParams","useState","searchValue","setSearchValue","useEffect","onSubmit","event","preventDefault","type","value","onChange","target","disabled","Movies","useSearchParams","setSearchParams","moviesList","setMoviesList","location","useLocation","get","requestMoviesList","getSearchMovies","query","then","data","results","movies","map","title","id","to","state","from","keyApi","themoviedbApi","axios","baseURL","getTrending","params","api_key","getMoviesId","movieId","detail"],"sourceRoot":""}